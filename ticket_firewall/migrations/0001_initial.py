# Generated by Django 5.0.5 on 2024-05-20 08:35

import django.core.files.storage
import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0187_alter_device_vc_position'),
        ('extras', '0115_convert_dashboard_widgets'),
        ('ipam', '0069_gfk_indexes'),
    ]

    operations = [
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('ticket_id', models.PositiveIntegerField(unique=True)),
                ('ticket_name', models.CharField(blank=True, max_length=100, unique=True)),
                ('id_directum', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(default='inactive', max_length=30)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('comments', models.TextField(blank=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('ticket_id',),
            },
        ),
        migrations.CreateModel(
            name='AttachFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='./media/ticket_attachments'), upload_to='')),
                ('name', models.CharField(blank=True, max_length=500)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file', to='ticket_firewall.ticket')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('index', models.PositiveIntegerField()),
                ('source_ports', models.CharField(blank=True, default='Any', max_length=100)),
                ('destination_ports', models.CharField(blank=True, default='Any', max_length=100)),
                ('action', models.CharField(blank=True, default='permit', max_length=30)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('opened', models.DateField(blank=True, null=True)),
                ('closed', models.DateField(blank=True, null=True)),
                ('destination_address', models.ManyToManyField(blank=True, related_name='+', to='ipam.ipaddress')),
                ('destination_prefix', models.ManyToManyField(blank=True, related_name='+', to='ipam.prefix')),
                ('device', models.ManyToManyField(blank=True, related_name='+', to='dcim.device')),
                ('protocols', models.ManyToManyField(blank=True, related_name='+', to='ticket_firewall.protocol')),
                ('source_address', models.ManyToManyField(blank=True, related_name='+', to='ipam.ipaddress')),
                ('source_prefix', models.ManyToManyField(blank=True, related_name='+', to='ipam.prefix')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='ticket_firewall.ticket')),
            ],
            options={
                'ordering': ('ticket_id', 'index'),
                'unique_together': {('ticket_id', 'index')},
            },
        ),
    ]
